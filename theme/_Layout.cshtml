@{
        string Title = Model.WithoutSettings.String(BlogKeys.Title);
        string PageTitle = Context.String(BlogKeys.Title) + (string.IsNullOrWhiteSpace(Title) ? string.Empty : " - " + Title);
}
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>

        <title>@PageTitle</title>
        <meta name="description" content="@Context.String(BlogKeys.Description)" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">        

        @if (Context.String(BlogKeys.RssPath) != null) {
        <link type="application/rss+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.RssPath))" />
        }
        @if (Context.String(BlogKeys.AtomPath) != null) {
        <link type="application/atom+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.AtomPath))" />
        }
        <link rel="shortcut icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">
        <link rel="icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">

        <meta name="application-name" content="@Context.String(BlogKeys.Title)" />
        <meta name="msapplication-tooltip" content="@Context.String(BlogKeys.Title)" />
        <meta name="msapplication-starturl" content="@Context.GetLink("/")" />

        <meta property="og:title" content="@PageTitle" />
        @* <meta property="og:image" content="@Blog.Image" /> *@
        <meta property="og:type" content="website" />
        <meta property="og:url" content="@Context.GetLink(Model, true)" />
        <!-- TODO: More social graph meta tags -->

        @Html.Partial("_DefaultLibs")

        @Html.Partial("_Head")

    </head>
    <body>
        <!-- Navigation -->
        
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <!-- Brand and toggle get grouped for better mobile display -->
            <a class="navbar-brand" href="#">@Context.String(BlogKeys.Title)</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar" 
                aria-controls="navbar" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse " id="navbar">
                <ul class="navbar-nav ml-auto">
                    @Html.Partial("_Navbar") 
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </nav>
        
        <!-- Page Header -->
        @{
            string backgroundImage = null;
            if(Model.String(BlogKeys.Image) != null)
            {
                    backgroundImage = $"background-image: url(\"{Model.String(BlogKeys.Image)}\")";
            }
        }
        <header class="intro-header" id="intro-header">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        @if(IsSectionDefined("Header")) {
                            @RenderSection("Header")
                        } else {
                            @Html.Partial("_Header")                                            
                        }
                    </div>
                </div>
            </div>
        </header>
        
        <!-- Main Content -->
        <div class="container">
                <div class="row">
                        <div id="content" class="col-md-12">
                                @RenderBody()
                        </div>
                </div>
        </div>
        
        <hr>
        
        <!-- Footer -->
        <footer>
                @Html.Partial("_Footer")
        </footer> 

        @Html.Partial("_Scripts")
        <script defer>// hljs.initHighlightingOnLoad();</script>
    </body>
</html>

